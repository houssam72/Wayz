[{"C:\\Users\\houss\\desktop\\wayz\\src\\index.js":"1","C:\\Users\\houss\\desktop\\wayz\\src\\App.js":"2","C:\\Users\\houss\\desktop\\wayz\\src\\logo\\logo.js":"3","C:\\Users\\houss\\desktop\\wayz\\src\\Particles\\Particles.js":"4","C:\\Users\\houss\\desktop\\wayz\\src\\Space\\Space.js":"5","C:\\Users\\houss\\desktop\\wayz\\src\\home\\home.js":"6","C:\\Users\\houss\\desktop\\wayz\\src\\Register\\Register.js":"7","C:\\Users\\houss\\desktop\\wayz\\src\\Navigation\\navigation.js":"8","C:\\Users\\houss\\desktop\\wayz\\src\\Signin\\Signin.js":"9","C:\\Users\\houss\\desktop\\wayz\\src\\Bars\\Bars.js":"10","C:\\Users\\houss\\desktop\\wayz\\src\\search\\Search.js":"11","C:\\Users\\houss\\desktop\\wayz\\src\\search\\Cardlist.js":"12","C:\\Users\\houss\\desktop\\wayz\\src\\search\\Searchbox.js":"13","C:\\Users\\houss\\desktop\\wayz\\src\\search\\robots.js":"14","C:\\Users\\houss\\desktop\\wayz\\src\\search\\Card.js":"15","C:\\Users\\houss\\desktop\\wayz\\src\\search\\pay.js":"16","C:\\Users\\houss\\desktop\\wayz\\src\\Map\\Map.js":"17","C:\\Users\\houss\\desktop\\wayz\\src\\creecov\\creecov.js":"18","C:\\Users\\houss\\desktop\\wayz\\src\\demandercov\\demandercov.js":"19","C:\\Users\\houss\\desktop\\wayz\\src\\Map\\loc.js":"20","C:\\Users\\houss\\desktop\\wayz\\src\\Map\\CardCarLocation.js":"21","C:\\Users\\houss\\desktop\\wayz\\src\\Map\\SearchMap.js":"22"},{"size":263,"mtime":1619833839177,"results":"23","hashOfConfig":"24"},{"size":1878,"mtime":1620697529403,"results":"25","hashOfConfig":"24"},{"size":282,"mtime":1620005939172,"results":"26","hashOfConfig":"24"},{"size":560,"mtime":1619833839169,"results":"27","hashOfConfig":"24"},{"size":2797,"mtime":1619917445925,"results":"28","hashOfConfig":"24"},{"size":514,"mtime":1620002169437,"results":"29","hashOfConfig":"24"},{"size":1600,"mtime":1620448075132,"results":"30","hashOfConfig":"24"},{"size":784,"mtime":1620533209535,"results":"31","hashOfConfig":"24"},{"size":1519,"mtime":1620695782417,"results":"32","hashOfConfig":"24"},{"size":3838,"mtime":1620697454401,"results":"33","hashOfConfig":"24"},{"size":1696,"mtime":1620343004781,"results":"34","hashOfConfig":"24"},{"size":1230,"mtime":1620352995462,"results":"35","hashOfConfig":"24"},{"size":971,"mtime":1620751358966,"results":"36","hashOfConfig":"24"},{"size":2887,"mtime":1620167146146,"results":"37","hashOfConfig":"24"},{"size":2035,"mtime":1620696672758,"results":"38","hashOfConfig":"24"},{"size":725,"mtime":1620350131346,"results":"39","hashOfConfig":"24"},{"size":17819,"mtime":1620842950825,"results":"40","hashOfConfig":"24"},{"size":125,"mtime":1620696976298,"results":"41","hashOfConfig":"24"},{"size":138,"mtime":1620697549504,"results":"42","hashOfConfig":"24"},{"size":642,"mtime":1620748650968,"results":"43","hashOfConfig":"24"},{"size":1868,"mtime":1620846956712,"results":"44","hashOfConfig":"24"},{"size":1159,"mtime":1620840124454,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1xokie8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\houss\\desktop\\wayz\\src\\index.js",[],["95","96"],"C:\\Users\\houss\\desktop\\wayz\\src\\App.js",["97","98"],"import React, { Component } from \"react\";\r\nimport Space from './Space/Space';\r\nimport './App.css';\r\nimport Home from './home/home';\r\nimport Particle from './Particles/Particles';\r\nimport Navigation from './Navigation/navigation';\r\nimport Logo from './logo/logo';\r\nimport Signin from './Signin/Signin';\r\nimport Register from './Register/Register';\r\nimport Bars from './Bars/Bars';\r\nimport Search from './search/Search';\r\nimport LocationSearchModal from './Map/Map';\r\nimport Creecov from './creecov/creecov';\r\nimport Demandercov from './demandercov/demandercov';\r\nclass App extends Component {\r\n\r\nconstructor(){\r\n  super();\r\n  this.state={\r\n    input:'',\r\n    route:'homep',\r\n    isSignedIn:false\r\n    \r\n  }\r\n}\r\n\r\nonRouteChange=(route) =>{\r\n if(route===\"signin\" || route===\"registrer\"){\r\n    this.setState({isSignedIn:false})\r\n  } else {\r\n    this.setState({isSignedIn:true})\r\n  }\r\n  this.setState({route:route})\r\n}\r\n\r\n  render(){\r\n  return (\r\n    <div>\r\n   { this.state.route==='homep'\r\n    ? \r\n    <div>\r\n    <Space/>\r\n    <Home onRouteChange={this.onRouteChange}/>\r\n    </div>\r\n    :\r\n    <div>\r\n    <Particle/>\r\n     <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\r\n    <Logo/>\r\n    { this.state.route==='signin'\r\n      ? <Signin onRouteChange={this.onRouteChange}/>\r\n      : (this.state.route==='home' || this.state.route==='payee'\r\n         ?<Search route={this.state.route} />\r\n         :(this.state.route==='map'\r\n         ?<LocationSearchModal/>\r\n         :(this.state.route==='registrer'\r\n         ?<Register onRouteChange={this.onRouteChange}/>\r\n         :(this.state.route==='creecov'\r\n          ?<Creecov/>\r\n         :(this.state.route==='demandercov'\r\n          ?<Demandercov/> \r\n         :<div></div>))))\r\n)\r\n    }\r\n\r\n\r\n    </div>\r\n\r\n   \r\n  }\r\n/*  {/*<LocationSearchModal/>*/}\r\n*/    </div>\r\n  \r\n  );\r\n}\r\n}\r\n\r\nexport default App;","C:\\Users\\houss\\desktop\\wayz\\src\\logo\\logo.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Particles\\Particles.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Space\\Space.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\home\\home.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Register\\Register.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Navigation\\navigation.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Signin\\Signin.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Bars\\Bars.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React , { Component }from 'react';\r\nimport './Bars.css';\r\nimport img from './2121.jpg';\r\nimport newLogo from './212.png';\r\n\r\n\r\n  /*function openNav() {\r\n  document.getElementById(\"mySidenav\").style.width =\"350px\";\r\n  document.getElementById(\"mySidenav\").style.marginTop = \"60px\"\r\n\r\n}\r\n\r\nfunction closeNav() {\r\n  document.getElementById(\"mySidenav\").style.width = \"0\";\r\n\r\n}*/\r\n\r\nclass Bars extends Component {\r\n\r\n     constructor(){\r\n    super();\r\n    this.state={\r\n    brktebutton:false\r\n    \r\n  }\r\n}\r\nopenNav(){\r\n    this.setState({brktebutton:true});\r\n    \r\n}\r\ncloseNav(){\r\n    this.setState({brktebutton:false});\r\n    \r\n\r\n}\r\n\r\n\r\n    render(){\r\n    return(\r\n  <div>\r\n       {this.state.brktebutton===false\r\n        ?\r\n            <div className=\"navbar navbar1\">\r\n                <div className=\"navbar_left\">\r\n                    \r\n                    <ul  className=\"menu\">\r\n                        <li className=\"li_img\"><img src={img} alt=\"PDP\" width=\"100%\" className=\"img_pers\" /></li>\r\n                        <li>\r\n                            <div className=\"dropdown\">\r\n                              <button className=\"dropbtn white\"> ▾ </button>\r\n                                  <div className=\"dropdown-content\">\r\n                                    <a href=\"#\">Link 1</a>\r\n                                    <a href=\"#\">Link 2</a>\r\n                                    <a href=\"#\">Link 3</a>\r\n                                  </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n                <span  style={{cursor:'pointer'}} onClick={()=>this.openNav()} className=\"white\" >&#9776;</span>\r\n            </div>\r\n        \r\n\r\n:\r\n<div>\r\n  <div className=\"navbar navbar1\">\r\n                <div className=\"navbar_left\">\r\n                    \r\n                    <ul  className=\"menu\">\r\n                          <li className=\"li_img\"><img src={img} alt=\"PDP\" width=\"100%\" className=\"img_pers\" /></li>\r\n                        <li>\r\n                            <div className=\"dropdown\">\r\n                              <button className=\"dropbtn white\"> ▾ </button>\r\n                                  <div className=\"dropdown-content\">\r\n                                    <a href=\"#\">Link 1</a>\r\n                                    <a href=\"#\">Link 2</a>\r\n                                    <a href=\"#\">Link 3</a>\r\n                                  </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n                <span style={{cursor:'pointer'}} onClick={()=>this.closeNav()} className=\"white\">&#9776;</span>\r\n            </div>\r\n\r\n            <div id=\"mySidenav\" className=\"sidenav\" style={{width :'330px',marginTop :\"60px\"}} >\r\n                <a href='#' className=\"closebtn\" onClick={()=>this.closeNav()}  >&times;</a>\r\n                <a href='#' onClick={()=>this.props.onRouteChange('home')}>Home</a>\r\n                  <a href='#' onClick={()=>this.props.onRouteChange('demandercov')}>Demander un covoiturage</a>\r\n                <a href='#' onClick={()=>this.props.onRouteChange('creecov')}>Créer un covoiturage</a>\r\n                <a href='#' onClick={()=>this.props.onRouteChange('map')}>Map</a>\r\n                <a href='#' onClick={()=>this.props.onRouteChange('payee')}>Covoiturages enregistrer </a>\r\n                <a href='#'>Mes Messages</a>\r\n                <a href='#'>Contact</a>\r\n                <div className=\"navbar_right\">\r\n                    <ul>\r\n                        <li><a href='#' onClick={()=>this.props.onRouteChange('homep')}>Sign Out</a> </li>\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n        }\r\n            </div>\r\n        \r\n);\r\n}\r\n}\r\nexport default Bars;\r\n","C:\\Users\\houss\\desktop\\wayz\\src\\search\\Search.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\search\\Cardlist.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\search\\Searchbox.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\search\\robots.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\search\\Card.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\search\\pay.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Map\\Map.js",["115"],"import React from 'react';\r\nimport {  withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Descriptions } from 'antd';\r\n\r\nimport man from './man.png';\r\n\r\nimport Cardlist1 from './CardCarLocation';\r\nimport SearchMap from './SearchMap';\r\n\r\nGeocode.setApiKey(\"AIzaSyB6Up16Hpna6lEpVn0JQmkKI9ny0ulJNYg\");\r\nGeocode.enableDebug();\r\n\r\nclass LocationSearchModal extends React.Component {\r\n  \r\n\r\n    state = {\r\n       typeV:'',\r\n       typeR:'',\r\n       isOpen: false,\r\n       indexOpen:-1,\r\n        address: '',\r\n        city: '',\r\n        area: '',\r\n        state: '',\r\n        zoom: 15,\r\n        height: 400,\r\n        mapPosition: {\r\n            lat: 0,\r\n            lng: 0,\r\n        },\r\n        markerPosition: {\r\n            lat: 0,\r\n            lng: 0,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (navigator.geolocation) {\r\n\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.setState({\r\n                    mapPosition: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    },\r\n                    markerPosition: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    }\r\n                },\r\n                    () => {\r\n                        Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\r\n                            response => {\r\n                                console.log(response)\r\n                                const address = response.results[0].formatted_address,\r\n                                    addressArray = response.results[0].address_components,\r\n                                    city = this.getCity(addressArray),\r\n                                    area = this.getArea(addressArray),\r\n                                    state = this.getState(addressArray);\r\n                                console.log('city', city, area, state);\r\n                                this.setState({\r\n                                    address: (address) ? address : '',\r\n                                    area: (area) ? area : '',\r\n                                    city: (city) ? city : '',\r\n                                    state: (state) ? state : '',\r\n                                })\r\n                            },\r\n                            error => {\r\n                                console.error(error);\r\n                            }\r\n                        );\r\n\r\n                    })\r\n            });\r\n        } else {\r\n            console.error(\"Geolocation is not supported by this browser!\");\r\n        }\r\n    };\r\n\r\n    // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    //     if (\r\n    //         this.state.markerPosition.lat !== this.state.center.lat ||\r\n    //         this.state.address !== nextState.address ||\r\n    //         this.state.city !== nextState.city ||\r\n    //         this.state.area !== nextState.area ||\r\n    //         this.state.state !== nextState.state\r\n    //     ) {\r\n    //         return true\r\n    //     } else if (this.state.mapPosition.lat === nextState.mapPosition.lat) {\r\n    //         return false\r\n    //     }\r\n    // }\r\n   onVchange = (event) => {\r\n  \r\n  this.setState({typeV: event.target.value });\r\n  \r\n}\r\n\r\n  onRchange = (event) => {\r\n  \r\n  this.setState({typeR: event.target.value });\r\n  console.log('typeR',this.state.typeR);\r\n  \r\n}\r\n    \r\n\r\n    handleToggleOpen = (index) => {\r\n    this.setState({\r\n      isOpen: true,\r\n      indexOpen:index\r\n    });\r\n  };\r\n\r\n  handleToggleClose = () => {\r\n    this.setState({\r\n      isOpen: false,\r\n    });\r\n  };\r\n\r\n\r\n    getCity = (addressArray) => {\r\n        let city = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\r\n                city = addressArray[i].long_name;\r\n                return city;\r\n            }\r\n        }\r\n    };\r\n\r\n    getArea = (addressArray) => {\r\n        let area = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0]) {\r\n                for (let j = 0; j < addressArray[i].types.length; j++) {\r\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\r\n                        area = addressArray[i].long_name;\r\n                        return area;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getState = (addressArray) => {\r\n        let state = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            for (let i = 0; i < addressArray.length; i++) {\r\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\r\n                    state = addressArray[i].long_name;\r\n                    return state;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    \r\n   \r\n\r\n    onMarkerDragEnd = (event) => {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n\r\n        Geocode.fromLatLng(newLat, newLng).then(\r\n            response => {\r\n                const address = response.results[0].formatted_address,\r\n                    addressArray = response.results[0].address_components,\r\n                    city = this.getCity(addressArray),\r\n                    area = this.getArea(addressArray),\r\n                    state = this.getState(addressArray);\r\n                this.setState({\r\n                    address: (address) ? address : '',\r\n                    area: (area) ? area : '',\r\n                    city: (city) ? city : '',\r\n                    state: (state) ? state : '',\r\n                    markerPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng\r\n                    },\r\n                    mapPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng\r\n                    },\r\n                })\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    };\r\n\r\n    onPlaceSelected = (place) => {\r\n        console.log('plc', place);\r\n        const address = place.formatted_address,\r\n            addressArray = place.address_components,\r\n            city = this.getCity(addressArray),\r\n            area = this.getArea(addressArray),\r\n            state = this.getState(addressArray),\r\n            latValue = place.geometry.location.lat(),\r\n            lngValue = place.geometry.location.lng();\r\n\r\n        console.log('latvalue', latValue)\r\n        console.log('lngValue', lngValue)\r\n\r\n        // Set these values in the state.\r\n        this.setState({\r\n            address: (address) ? address : '',\r\n            area: (area) ? area : '',\r\n            city: (city) ? city : '',\r\n            state: (state) ? state : '',\r\n            markerPosition: {\r\n                lat: latValue,\r\n                lng: lngValue\r\n            },\r\n            mapPosition: {\r\n                lat: latValue,\r\n                lng: lngValue\r\n            },\r\n        })\r\n    };\r\n\r\n\r\n\r\n\r\n    // const AsyncMap = compose(\r\n    //     withProps({\r\n    //         googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyALVjLwOIM1gf7EzdJJVmWLKdLP-yZGTcw&v=3.exp&libraries=geometry,drawing,places\",\r\n    //         loadingElement: <div style={{ height: `100%` }} />,\r\n    //         containerElement: <div style={{ height: `400px` }} />,\r\n    //         mapElement: <div style={{ height: `100%` }} />,\r\n    //     }),\r\n    //     withScriptjs,\r\n    //     withGoogleMap\r\n    // )((props) =>\r\n    //     <GoogleMap\r\n\r\n    render() {\r\n\r\n          \r\n   \r\n        const AsyncMap = withScriptjs(\r\n            withGoogleMap(\r\n                props => (\r\n                    <GoogleMap\r\n                        defaultZoom={this.state.zoom}\r\n                        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n                    >\r\n                        {/* InfoWindow on top of marker */}\r\n\r\n                        {/*Marker*/}\r\n                        <Marker\r\n                            key={-1}\r\n                            google={this.props.google}\r\n                            name={'Dolores park'}\r\n                            draggable={true}\r\n                            onDragEnd={this.onMarkerDragEnd}\r\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n                            \r\n                             icon={{\r\n\r\n                                  url: man,\r\n                                  scaledSize : new window.google.maps.Size(25,25 ),\r\n\r\n    }}\r\n\r\n        \r\n                            \r\n                         onClick={() => this.handleToggleOpen(-1)}\r\n\r\n        \r\n                            \r\n                        >\r\n                       {this.state.isOpen && -1===this.state.indexOpen &&( \r\n                        <InfoWindow\r\n                            \r\n                        >\r\n                         \r\n                            <div>\r\n                                <span style={{ padding: 0, margin: 0 }}>{this.state.address}</span>\r\n                            </div>\r\n                        </InfoWindow>)}\r\n                    </Marker>\r\n                       \r\n      \r\n                         \r\n                        <Cardlist1 handleToggleOpen={this.handleToggleOpen} isOpen={this.state.isOpen} indexOpen={this.state.indexOpen} google={this.props.google} \r\n                                   typeV={this.state.typeV}  typeR={this.state.typeR} />\r\n                       \r\n\r\n                        {/* <MarkerWithLabel\r\n                            position={{ lat: -34.397, lng: 150.644 }}\r\n                            labelAnchor={new google.maps.Point(0, 0)}\r\n                            labelStyle={{ backgroundColor: \"yellow\", fontSize: \"32px\", padding: \"16px\" }}\r\n                        >\r\n                            <div>Hello There!</div>\r\n                        </MarkerWithLabel> */}\r\n\r\n\r\n                        {/* For Auto complete Search Box */}\r\n                        \r\n                    </GoogleMap>\r\n                )\r\n            )\r\n        );\r\n\r\n        return (\r\n            <div className='tc' style={{ padding: '1rem', margin: '0 auto', maxWidth: 1000 }}>\r\n                \r\n               \r\n            <SearchMap onPlaceSelected={this.onPlaceSelected} \r\n                       onVchange={this.onVchange} onRchange={this.onRchange} />\r\n\r\n                <AsyncMap\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB6Up16Hpna6lEpVn0JQmkKI9ny0ulJNYg&libraries=places\"\r\n                    loadingElement={\r\n                        <div style={{ height: `100%` }} />\r\n                    }\r\n                    containerElement={\r\n                        <div style={{ height: this.state.height }} />\r\n                    }\r\n                    mapElement={\r\n                        <div style={{ height: `100%` }} />\r\n                    }\r\n                /> \r\n                <Descriptions bordered>\r\n                    <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\r\n                </Descriptions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LocationSearchModal;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*import React, { Component } from \"react\";\r\nimport {\r\n  InfoWindow,\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Descriptions} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport AutoComplete from 'react-google-autocomplete'\r\n\r\nGeocode.setApiKey(\"AIzaSyB6Up16Hpna6lEpVn0JQmkKI9ny0ulJNYg\");\r\n\r\nclass Map extends Component {\r\n\r\n\r\n  constructor(){\r\n  super();\r\n   this.state={\r\n   address:\"\",\r\n   city:\"\",\r\n   area:\"\",\r\n   state:\"\",\r\n   zoom:15,\r\n   height:400,\r\n   mapPosition:{\r\n    lat:0,\r\n    lng:0,\r\n   },\r\n   markerPosition:{\r\n    lat:0,\r\n    lng:0,\r\n   }\r\n\r\n\r\n\r\n  }  }  \r\n\r\n componentDidMount(){\r\n\r\n\r\n\r\n   if(navigator.geolocation){\r\n  navigator.geolocation.getCurrentPosition(position =>{\r\n    console.log('position',position)\r\n      this.setState({\r\n         mapPosition:{\r\n             lat:position.coords.latitude,\r\n             lng:position.coords.longitude,\r\n          },\r\n         markerPosition:{\r\n             lat:position.coords.latitude,\r\n             lng:position.coords.longitude,\r\n         }\r\n      },()=>{\r\n        Geocode.fromLatLng(position.coords.latitude,position.coords.longitude)\r\n  .then(response=>{\r\n    console.log('response',response);\r\n\r\n    const address=response.results[0].formatted_address,\r\n          addressArray=response.results[0].address_components,\r\n          city=this.getCity(addressArray),\r\n          area=this.getArea(addressArray),\r\n          state=this.getState(addressArray);\r\n\r\n          this.setState({\r\n           address:(address) ? address :\"\",\r\n            area:(area) ? area :\"\",\r\n            city:(city) ? city :\"\",\r\n            state:(state) ? state :\"\",\r\n                \r\n          })\r\n  })\r\n      })\r\n  })\r\n\r\n   }\r\n }\r\n\r\n getCity=(addressArray)=>{\r\n  let city=''\r\n  for(let i=0;i<addressArray.length;i++){\r\n     if(addressArray[i].types[0] && 'administrative_area_level_2'===addressArray[i].types[0]){\r\n      city=addressArray[i].long_name;\r\n      return city;\r\n     }\r\n\r\n  }\r\n \r\n\r\n }\r\n\r\n getArea=(addressArray)=>{\r\n  let area=''\r\n  for(let i=0;i<addressArray.length;i++){\r\n     if(addressArray[i].types[0]){\r\n        for(let j=0;j<addressArray.length;j++){\r\n     if('sublocality_level_1'===addressArray[i].types[j] || 'locality'===addressArray[i].types[j] )\r\n           area=addressArray[i].long_name;\r\n         return area;\r\n        }\r\n\r\n      \r\n    \r\n     }\r\n\r\n  }\r\n\r\n\r\n }\r\n\r\n\r\n  getState=(addressArray)=>{\r\n  let state=''\r\n  for(let i=0;i<addressArray.length;i++){\r\n  for(let i=0;i<addressArray.length;i++){\r\n    if(addressArray[i].types[0] && 'administrative_area_level_1'===addressArray[i].types[0]){\r\n      state=addressArray[i].long_name;\r\n      return state\r\n\r\n    }\r\n  }   \r\n\r\n     \r\n     }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n onMarkerDragEnd=(event)=>{\r\n\r\n  let newLat=event.latLng.lat();\r\n  let newLng=event.latLng.lng();\r\n\r\n  console.log('new lat',newLat,'newLng',newLng);\r\n\r\n  Geocode.fromLatLng(newLat,newLng)\r\n  .then(response=>{\r\n    console.log('response',response);\r\n\r\n    const address=response.results[0].formatted_address,\r\n          addressArray=response.results[0].address_components,\r\n          city=this.getCity(addressArray),\r\n          area=this.getArea(addressArray),\r\n          state=this.getState(addressArray);\r\n\r\n          this.setState({\r\n           address:(address) ? address :\"\",\r\n            area:(area) ? area :\"\",\r\n            city:(city) ? city :\"\",\r\n            state:(state) ? state :\"\",\r\n            mapPosition:{\r\n              lat:newLat,\r\n              lng:newLng\r\n            },\r\n            markerPosition:{\r\n              lat:newLat,\r\n              lng:newLng\r\n            }      \r\n          })\r\n  })\r\n\r\n  }\r\n\r\n\r\n   onPlaceSelected=(place)=>{\r\n     const address=place.formatted_address,\r\n          addressArray=place.address_components,\r\n          city=this.getCity(addressArray),\r\n          area=this.getArea(addressArray),\r\n          state=this.getState(addressArray),\r\n          newLat=place.geometry.location.lat(),\r\n          newLng=place.geometry.location.lng();\r\n\r\n          this.setState({\r\n           address:(address) ? address :\"\",\r\n            area:(area) ? area :\"\",\r\n            city:(city) ? city :\"\",\r\n            state:(state) ? state :\"\",\r\n            mapPosition:{\r\n              lat:newLat,\r\n              lng:newLng\r\n            },\r\n            markerPosition:{\r\n              lat:newLat,\r\n              lng:newLng\r\n            }      \r\n          })\r\n  }\r\n\r\n  render(){\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n  const MapWithAMarker = withScriptjs(withGoogleMap(props =>\r\n  <GoogleMap\r\n    defaultZoom={11}\r\n    defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n  >\r\n    <Marker\r\n      draggable={true}\r\n      onDragEnd={this.onMarkerDragEnd}\r\n      position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n    >\r\n<InfoWindow>\r\n  <p> Hello </p>\r\n\r\n</InfoWindow>\r\n\r\n\r\n    </Marker>\r\n\r\n    <AutoComplete\r\n    style={{width:\"100%\",height:'40px' ,paddingLeft:16,marginTop:2,marginBottom:'2rem'}}\r\n    types={ [\"(regions)\"]}\r\n     onPlaceSelected={this.onPlaceSelected}\r\n    />\r\n\r\n  </GoogleMap>\r\n));\r\n\r\n  return (\r\n    <div>\r\n\r\n <Descriptions title=\"User Info\" bordered>\r\n    <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\r\n    <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\r\n    <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\r\n    <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\r\n    \r\n   \r\n  </Descriptions>,\r\n\r\n  <MapWithAMarker\r\n  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB6Up16Hpna6lEpVn0JQmkKI9ny0ulJNYg&v=3.exp&libraries=geometry,drawing,places\"\r\n  loadingElement={<div style={{ height: `100%` }} />}\r\n  containerElement={<div style={{ height: `400px` }} />}\r\n  mapElement={<div style={{ height: `100%` }} />}\r\n/>\r\n    </div>\r\n  \r\n  );\r\n}\r\n}\r\n\r\nexport default Map;*/}","C:\\Users\\houss\\desktop\\wayz\\src\\creecov\\creecov.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\demandercov\\demandercov.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Map\\loc.js",[],"C:\\Users\\houss\\desktop\\wayz\\src\\Map\\CardCarLocation.js",["116"],"import React from 'react';\r\nimport {   Marker,InfoWindow } from \"react-google-maps\";\r\nimport {loc} from './loc';\r\nimport car2 from './car2.png';\r\nimport carb from './carb.png';\r\nimport moto from './moto.png';\r\nimport motob from './motob.png';\r\n\r\nconst Cardlist1=({handleToggleOpen,isOpen,indexOpen,google,typeV,typeR})=>{\r\n    \r\n\tconst Cardcomponent1=loc.map((user,i)=>{\r\n\t\tlet x=car2;\r\n\t\tif(loc[i].action==='voiture' && loc[i].type==='zone'){x=car2}\r\n\t\tif(loc[i].action==='voiture' && loc[i].type==='route'){x=carb}\r\n\t\tif(loc[i].action==='moto' && loc[i].type==='zone'){x=moto}\r\n\t\tif(loc[i].action==='moto' && loc[i].type==='route'){x=motob}\t\r\n\t\tif(typeV.includes(loc[i].action))\r\n\t\tif(typeR.includes(loc[i].type))\r\n\t\treturn  <Marker\r\n                            key={i}\r\n                            google={google}\r\n                            name={'Dolores park'}\r\n                            \r\n                            position={{ lat: loc[i].lat, lng: loc[i].lng }}\r\n                            \r\n                             icon={{\r\n\r\n                             \r\n                                  url:x,\r\n                                  scaledSize : new window.google.maps.Size(25,25 ),\r\n    }}\r\n\r\n        \r\n                            \r\n                         onClick={() => handleToggleOpen(i)}\r\n\r\n        \r\n                            \r\n                        >\r\n                       {isOpen && i===indexOpen &&( \r\n                        <InfoWindow\r\n                            \r\n                        >\r\n                         \r\n                            <div>\r\n                                <span style={{ padding: 0, margin: 0 }}>raja</span>\r\n                            </div>\r\n                        </InfoWindow>)}\r\n                    </Marker>\r\n\t})\r\n\r\n\treturn <div> {Cardcomponent1} </div>\r\n\r\n}\r\n\r\n\r\nexport default Cardlist1;","C:\\Users\\houss\\desktop\\wayz\\src\\Map\\SearchMap.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":10,"column":8,"nodeType":"123","messageId":"124","endLine":10,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":70,"column":4,"nodeType":"127","messageId":"128","endLine":71,"endColumn":5},{"ruleId":"121","severity":1,"message":"129","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":52,"column":37,"nodeType":"132","endLine":52,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":53,"column":37,"nodeType":"132","endLine":53,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":54,"column":37,"nodeType":"132","endLine":54,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":77,"column":37,"nodeType":"132","endLine":77,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":78,"column":37,"nodeType":"132","endLine":78,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":79,"column":37,"nodeType":"132","endLine":79,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":91,"column":17,"nodeType":"132","endLine":91,"endColumn":82},{"ruleId":"130","severity":1,"message":"131","line":92,"column":17,"nodeType":"132","endLine":92,"endColumn":76},{"ruleId":"130","severity":1,"message":"131","line":93,"column":19,"nodeType":"132","endLine":93,"endColumn":85},{"ruleId":"130","severity":1,"message":"131","line":94,"column":17,"nodeType":"132","endLine":94,"endColumn":79},{"ruleId":"130","severity":1,"message":"131","line":95,"column":17,"nodeType":"132","endLine":95,"endColumn":75},{"ruleId":"130","severity":1,"message":"131","line":96,"column":17,"nodeType":"132","endLine":96,"endColumn":77},{"ruleId":"130","severity":1,"message":"131","line":97,"column":17,"nodeType":"132","endLine":97,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":98,"column":17,"nodeType":"132","endLine":98,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":101,"column":29,"nodeType":"132","endLine":101,"endColumn":89},{"ruleId":"133","severity":1,"message":"134","line":376,"column":1,"nodeType":"135","messageId":"136","endLine":630,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":11,"column":39,"nodeType":"139","messageId":"140","endLine":11,"endColumn":41},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Bars' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'newLogo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]